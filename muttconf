#!/usr/bin/env bash
#
# Muttconf - A tool to help configure accounts in Mutt
# Copyright (C) 2019  Dave Shoreman <aur+muttconf at dsdev dot io>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

set -Eeo pipefail

trap 'echo -e "\nAborted due to error" && exit 1' ERR
trap 'echo -e "\nAborted by user" && exit 1' SIGINT

readonly _VERSION="0.0.0"

main() {
    print_logo
    case "$(list_actions q)" in
        q)
            info "Goodbye!" && exit 0 ;;
    esac
}

list_actions() {
    local actions=() validopts=() opt

    case "${FUNCNAME[1]}" in
        main)
            actions+=("q;Quit;error")
            ;;
    esac

    for action in "${actions[@]}"; do
        IFS=";" read -ra action <<< "${action}"
        validopts+=("${action[0]}")

        echo -n " [${action[0]}] " >&2
        bold=1 ${action[2]:-info} "${action[1]}" >&2
    done
    echo >&2

    prompt opt "Enter selection" "${1}"
    while [[ ! " ${validopts[*]} " == *" ${opt} "* ]]; do
        warn "Invalid option '${opt}'" >&2
        prompt opt "Enter selection" "${1}"
    done

    echo "$opt" && echo >&2
}

# shellcheck disable=SC2016
print_logo() {
    clear; echo
    bold=1
    success '    /$$      /$$             /$$     /$$      /$$$$$$                       /$$$$$$ '
    success '   | $$$    /$$$            | $$    | $$     /$$__  $$                     /$$__  $$'
    success '   | $$$$  /$$$$ /$$   /$$ /$$$$$$ /$$$$$$  | $$  \__/  /$$$$$$  /$$$$$$$ | $$  \__/'
    success '   | $$ $$/$$ $$| $$  | $$|_  $$_/|_  $$_/  | $$       /$$__  $$| $$__  $$| $$$$    '
    success '   | $$  $$$| $$| $$  | $$  | $$    | $$    | $$      | $$  \ $$| $$  \ $$| $$_/    '
    success '   | $$\  $ | $$| $$  | $$  | $$ /$$| $$ /$$| $$    $$| $$  | $$| $$  | $$| $$      '
    success '   | $$ \/  | $$|  $$$$$$/  |  $$$$/|  $$$$/|  $$$$$$/|  $$$$$$/| $$  | $$| $$      '
    success '   |__/     |__/ \______/    \___/   \___/   \______/  \______/ |__/  |__/|__/      '
    bold=0 warn -e "\n                                                             Version ${_VERSION}"
}

info() {
    colourise 36 "$@"
}

warn() {
    colourise 33 "$@"
}

error() {
    colourise 31 "$@"
}

success() {
    colourise 32 "$@"
}

prompt() {
    declare -n var=$1
    local default

    [ -n "$3" ] && default=" [${3}]"

    bold=1 colourise 37 -n "${2}${default}: " >&2
    read -r var
    var="${var:-$3}"
}

colourise() {
    echo -en "\033[${bold:-0};${1}m"
    echo "${@:2}"
    echo -en "\033[0m"
}

main
